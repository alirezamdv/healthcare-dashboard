# Generated by Django 3.0.10 on 2021-06-25 09:48

import datetime
from django.db import migrations, models
import django.utils.timezone
import model_utils.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dengue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occ2', models.CharField(blank=True, choices=[('Employee', 'Employee'), ('Officer', 'Officer'), ('Student', 'Student'), ('Other', 'Other')], max_length=240, null=True, verbose_name='occupation')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('bleeding', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('gum_bleeding', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('gastrointestinal_bleeding', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('epistaxis', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('other_mucosal_bleeding', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('other_bleeding', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('incidencerate', models.CharField(blank=True, choices=[('incidencerate1', 'incidencerate1'), ('incidencerate2', 'incidencerate2')], max_length=100, null=True, verbose_name='incidence_rate')),
                ('UD2', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='UD2')),
                ('NS1', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=100, null=True, verbose_name='NS1')),
                ('wbc_d0', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('plt', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('lymp_d0', models.CharField(blank=True, choices=[('r0_17', 'r0_17'), ('r17_61', 'r17_61')], max_length=100, null=True, verbose_name='lymp_d0')),
                ('hct_d0', models.CharField(blank=True, choices=[('r0_328', 'r0_328'), ('r328_560', 'r328_560')], max_length=100, null=True, verbose_name='UD2')),
                ('atypl_d0', models.CharField(blank=True, choices=[('r0_1', 'r0_1'), ('r1_5', 'r1_5'), ('r5_45', 'r5_45')], max_length=100, null=True, verbose_name='atypl_d0')),
                ('ast', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('alt', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('tourniquettest', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('nausea', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('petechiae', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('myalgia', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('userID', models.IntegerField(blank=True, null=True)),
                ('eschar', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('hasFever', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('calfPain', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('abdominalPain', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('null', 'null')], max_length=10, null=True)),
                ('feverdays', models.IntegerField(blank=True, null=True)),
                ('outcome_bn', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('lastCalculated', models.DateTimeField(blank=True, null=True)),
                ('sensitivityAnalysis', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('outcomeRl', models.DecimalField(blank=True, decimal_places=7, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_type', models.CharField(blank=True, choices=[('Dengue', 'Dengue'), ('DHF', 'DHF'), ('Influenza', 'Influenza'), ('Others', 'Others')], max_length=100, null=True, verbose_name='diagnosis')),
                ('status', models.CharField(blank=True, choices=[('Confirmed', 'Confirmed'), ('Suspected', 'Suspected'), ('Negative', 'Negative')], max_length=100, null=True, verbose_name='status')),
                ('note', models.CharField(blank=True, max_length=2000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalReport',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('daytime', models.CharField(choices=[('D', 'D'), ('E', 'E'), ('N', 'N')], default='D', max_length=1)),
                ('datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('day_of_fever', models.PositiveIntegerField(blank=True, null=True)),
                ('fever', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('pulse', models.PositiveIntegerField(blank=True, null=True)),
                ('respiration', models.IntegerField(blank=True, null=True)),
                ('bp_sys', models.PositiveIntegerField(blank=True, null=True)),
                ('bp_dia', models.PositiveIntegerField(blank=True, null=True)),
                ('fluid_input', models.PositiveIntegerField(blank=True, null=True)),
                ('fi_oral', models.PositiveIntegerField(blank=True, null=True, verbose_name='oral')),
                ('fi_parenteral', models.PositiveIntegerField(blank=True, null=True, verbose_name='parenteral')),
                ('fi_other', models.PositiveIntegerField(blank=True, null=True, verbose_name='other')),
                ('fi_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fi_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('fluid_output', models.PositiveIntegerField(blank=True, null=True)),
                ('fo_urine', models.PositiveIntegerField(blank=True, null=True, verbose_name='urine')),
                ('fo_uf', models.PositiveIntegerField(blank=True, null=True, verbose_name='uf')),
                ('fo_emesis', models.PositiveIntegerField(blank=True, null=True, verbose_name='emesis')),
                ('fo_drainage', models.PositiveIntegerField(blank=True, null=True, verbose_name='drainage')),
                ('fo_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fo_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('diet', models.CharField(blank=True, max_length=1000, null=True)),
                ('pain_score', models.PositiveIntegerField(blank=True, null=True)),
                ('abd_cir', models.PositiveIntegerField(blank=True, null=True)),
                ('stools', models.PositiveIntegerField(blank=True, null=True)),
                ('urine', models.PositiveIntegerField(blank=True, null=True)),
                ('je', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='je')),
                ('febrile', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='febrile')),
                ('fever_date', models.DateTimeField(blank=True, null=True)),
                ('headache', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='headache')),
                ('headache_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='headache_days')),
                ('myalgia_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='myalgia_days')),
                ('bone', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='bone')),
                ('bone_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='bone_days')),
                ('retro', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='retro')),
                ('retro_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='retro_days')),
                ('flushed', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='flushed')),
                ('flushed_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='flushed_days')),
                ('rashwithout', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='rashwithout')),
                ('rashwithout_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='rashwithout_days')),
                ('rashwith', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='rashwith')),
                ('anorexia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='anorexia')),
                ('anorexia_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='anorexia_days')),
                ('nausea_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='nausea_days')),
                ('rashwith_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='rashwith_days')),
                ('vomitting', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='vomitting')),
                ('vomitting_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='vomitting_days')),
                ('abdominal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='abdominal')),
                ('abdominal_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='abdominal_days')),
                ('drowsiness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='drowsiness')),
                ('drowsiness_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='drowsiness_days')),
                ('spont', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='spont')),
                ('spont_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='spont_days')),
                ('ecchy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='ecchy')),
                ('ecchy_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='ecchy_days')),
                ('gum', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='gum')),
                ('gum_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='gum_days')),
                ('nose', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='nose')),
                ('nose_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='nose_days')),
                ('vomit_bleeding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='vomit_bleeding')),
                ('vomit_bleeding_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='vomit_bleeding_days')),
                ('stool', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='stool')),
                ('stool_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='stool_days')),
                ('other_bleeding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='other_bleeding')),
                ('tourniquet_qnt', models.PositiveIntegerField(blank=True, null=True, verbose_name='stool_days')),
                ('tourniquet_qlt', models.CharField(blank=True, choices=[('Fine', 'Fine'), ('Medium', 'Medium'), ('Coarse', 'Coarse'), ('Mixed', 'Mixed'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='stool')),
                ('uri', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='uri')),
                ('exud', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='exud')),
                ('exud_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='exud_days')),
                ('clear', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='clear')),
                ('clear_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='clear_days')),
                ('non_prod', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='non_prod')),
                ('non_prod_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='non_prod_days')),
                ('prod', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='prod')),
                ('prod_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='prod_days')),
                ('sore_throat', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='sore_throat')),
                ('sore_throat_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='sore_throat_days')),
                ('diarrhea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='diarrhea')),
                ('diarrhea_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='diarrhea_days')),
                ('mental_status', models.CharField(blank=True, choices=[('Alert', 'Alert'), ('Drowsy', 'Drowsy'), ('Lethargic', 'Lethargic'), ('Restless', 'Restless'), ('Stuporous', 'Stuporous'), ('Comatose', 'Comatose')], max_length=100, null=True, verbose_name='mental_status')),
                ('conflu', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='conflu')),
                ('maculo', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='maculo')),
                ('conval', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='conval')),
                ('bruising', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='bruising')),
                ('dyspnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='dyspnea')),
                ('ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='ascites')),
                ('juandice', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='ascites')),
                ('liver_tenderness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='liver_tenderness')),
                ('liver_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='liver_size')),
                ('abdominal_circ', models.PositiveIntegerField(blank=True, null=True, verbose_name='abdominal_circ')),
                ('spleen_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='spleen_size')),
                ('lymph_enlargment', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='lymph_enlargement')),
                ('cervical', models.PositiveIntegerField(blank=True, null=True, verbose_name='cervical')),
                ('epitro', models.PositiveIntegerField(blank=True, null=True, verbose_name='epitrochea')),
                ('inginual', models.PositiveIntegerField(blank=True, null=True, verbose_name='inginual')),
                ('injected', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='injected')),
                ('limbus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='limbus')),
                ('bulbar', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='bulbar')),
                ('transfusion', models.PositiveIntegerField(blank=True, null=True, verbose_name='transfusion')),
                ('crystalline', models.PositiveIntegerField(blank=True, null=True, verbose_name='crystalline')),
                ('form1', models.PositiveIntegerField(blank=True, null=True, verbose_name='form1')),
                ('form2', models.PositiveIntegerField(blank=True, null=True, verbose_name='form2')),
                ('form3', models.PositiveIntegerField(blank=True, null=True, verbose_name='form3')),
                ('form4', models.PositiveIntegerField(blank=True, null=True, verbose_name='form4')),
                ('form4x', models.PositiveIntegerField(blank=True, null=True, verbose_name='form4x')),
                ('dextran', models.PositiveIntegerField(blank=True, null=True, verbose_name='dextran')),
                ('haesteryl', models.PositiveIntegerField(blank=True, null=True, verbose_name='haesteryl')),
                ('hct', models.PositiveIntegerField(blank=True, null=True, verbose_name='hct')),
                ('pmn', models.PositiveIntegerField(blank=True, null=True, verbose_name='pmn')),
                ('band', models.PositiveIntegerField(blank=True, null=True, verbose_name='band')),
                ('lymp', models.PositiveIntegerField(blank=True, null=True, verbose_name='lymp')),
                ('atyp', models.PositiveIntegerField(blank=True, null=True, verbose_name='atyp')),
                ('mono', models.PositiveIntegerField(blank=True, null=True, verbose_name='mono')),
                ('baso', models.PositiveIntegerField(blank=True, null=True, verbose_name='baso')),
                ('eosin', models.PositiveIntegerField(blank=True, null=True, verbose_name='eosin')),
                ('lft_protein', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_protein')),
                ('lft_albumin', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_albumin')),
                ('lft_ast', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_ast')),
                ('lft_alt', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_alt')),
                ('eff_1', models.PositiveIntegerField(blank=True, null=True, verbose_name='eff_1')),
                ('eff_2', models.PositiveIntegerField(blank=True, null=True, verbose_name='eff_2')),
                ('eff_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='eff_amount')),
                ('weight_ht', models.PositiveIntegerField(blank=True, null=True, verbose_name='weight/ht')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height')),
                ('o2sat', models.PositiveIntegerField(blank=True, null=True, verbose_name='O2 Saturation')),
                ('hematocrit', models.PositiveIntegerField(blank=True, null=True)),
                ('platelet', models.PositiveIntegerField(blank=True, null=True)),
                ('wbc', models.PositiveIntegerField(blank=True, null=True)),
                ('warning_signs', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Warning Signs')),
                ('additional', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Additional Info')),
                ('medical_advice', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Medical Advice')),
                ('status', models.CharField(blank=True, choices=[('febrile', 'febrile'), ('critical', 'critical'), ('recovery', 'recovery')], max_length=20, null=True)),
                ('status_changed_to_critical', model_utils.fields.MonitorField(default=django.utils.timezone.now, editable=False, monitor='status', when={'critical'})),
                ('monitoring_interval', models.SmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical report',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=240, null=True)),
                ('last_name', models.CharField(blank=True, max_length=240, null=True)),
                ('patientId', models.DecimalField(blank=True, decimal_places=0, max_digits=5, null=True, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('None', 'None')], max_length=10, null=True)),
                ('birth_date', models.DateTimeField(blank=True, null=True)),
                ('admission_date', models.DateTimeField()),
                ('enrollment_date', models.DateTimeField(blank=True, null=True)),
                ('dismissal_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['admission_date'],
                'get_latest_by': 'admission_date',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daytime', models.CharField(choices=[('D', 'D'), ('E', 'E'), ('N', 'N')], default='D', max_length=1)),
                ('datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('day_of_fever', models.PositiveIntegerField(blank=True, null=True)),
                ('fever', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('pulse', models.PositiveIntegerField(blank=True, null=True)),
                ('respiration', models.IntegerField(blank=True, null=True)),
                ('bp_sys', models.PositiveIntegerField(blank=True, null=True)),
                ('bp_dia', models.PositiveIntegerField(blank=True, null=True)),
                ('fluid_input', models.PositiveIntegerField(blank=True, null=True)),
                ('fi_oral', models.PositiveIntegerField(blank=True, null=True, verbose_name='oral')),
                ('fi_parenteral', models.PositiveIntegerField(blank=True, null=True, verbose_name='parenteral')),
                ('fi_other', models.PositiveIntegerField(blank=True, null=True, verbose_name='other')),
                ('fi_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fi_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('fluid_output', models.PositiveIntegerField(blank=True, null=True)),
                ('fo_urine', models.PositiveIntegerField(blank=True, null=True, verbose_name='urine')),
                ('fo_uf', models.PositiveIntegerField(blank=True, null=True, verbose_name='uf')),
                ('fo_emesis', models.PositiveIntegerField(blank=True, null=True, verbose_name='emesis')),
                ('fo_drainage', models.PositiveIntegerField(blank=True, null=True, verbose_name='drainage')),
                ('fo_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fo_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('diet', models.CharField(blank=True, max_length=1000, null=True)),
                ('pain_score', models.PositiveIntegerField(blank=True, null=True)),
                ('abd_cir', models.PositiveIntegerField(blank=True, null=True)),
                ('stools', models.PositiveIntegerField(blank=True, null=True)),
                ('urine', models.PositiveIntegerField(blank=True, null=True)),
                ('je', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='je')),
                ('febrile', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='febrile')),
                ('fever_date', models.DateTimeField(blank=True, null=True)),
                ('headache', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='headache')),
                ('headache_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='headache_days')),
                ('myalgia_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='myalgia_days')),
                ('bone', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='bone')),
                ('bone_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='bone_days')),
                ('retro', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='retro')),
                ('retro_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='retro_days')),
                ('flushed', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='flushed')),
                ('flushed_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='flushed_days')),
                ('rashwithout', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='rashwithout')),
                ('rashwithout_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='rashwithout_days')),
                ('rashwith', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='rashwith')),
                ('anorexia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='anorexia')),
                ('anorexia_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='anorexia_days')),
                ('nausea_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='nausea_days')),
                ('rashwith_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='rashwith_days')),
                ('vomitting', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='vomitting')),
                ('vomitting_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='vomitting_days')),
                ('abdominal', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='abdominal')),
                ('abdominal_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='abdominal_days')),
                ('drowsiness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='drowsiness')),
                ('drowsiness_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='drowsiness_days')),
                ('spont', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='spont')),
                ('spont_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='spont_days')),
                ('ecchy', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='ecchy')),
                ('ecchy_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='ecchy_days')),
                ('gum', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='gum')),
                ('gum_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='gum_days')),
                ('nose', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='nose')),
                ('nose_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='nose_days')),
                ('vomit_bleeding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='vomit_bleeding')),
                ('vomit_bleeding_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='vomit_bleeding_days')),
                ('stool', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='stool')),
                ('stool_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='stool_days')),
                ('other_bleeding', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='other_bleeding')),
                ('tourniquet_qnt', models.PositiveIntegerField(blank=True, null=True, verbose_name='stool_days')),
                ('tourniquet_qlt', models.CharField(blank=True, choices=[('Fine', 'Fine'), ('Medium', 'Medium'), ('Coarse', 'Coarse'), ('Mixed', 'Mixed'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='stool')),
                ('uri', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='uri')),
                ('exud', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='exud')),
                ('exud_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='exud_days')),
                ('clear', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='clear')),
                ('clear_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='clear_days')),
                ('non_prod', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='non_prod')),
                ('non_prod_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='non_prod_days')),
                ('prod', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='prod')),
                ('prod_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='prod_days')),
                ('sore_throat', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='sore_throat')),
                ('sore_throat_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='sore_throat_days')),
                ('diarrhea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Unknown', 'Unknown')], default='Unknown', max_length=100, null=True, verbose_name='diarrhea')),
                ('diarrhea_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='diarrhea_days')),
                ('mental_status', models.CharField(blank=True, choices=[('Alert', 'Alert'), ('Drowsy', 'Drowsy'), ('Lethargic', 'Lethargic'), ('Restless', 'Restless'), ('Stuporous', 'Stuporous'), ('Comatose', 'Comatose')], max_length=100, null=True, verbose_name='mental_status')),
                ('conflu', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='conflu')),
                ('maculo', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='maculo')),
                ('conval', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='conval')),
                ('bruising', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='bruising')),
                ('dyspnea', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='dyspnea')),
                ('ascites', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='ascites')),
                ('juandice', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='ascites')),
                ('liver_tenderness', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='liver_tenderness')),
                ('liver_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='liver_size')),
                ('abdominal_circ', models.PositiveIntegerField(blank=True, null=True, verbose_name='abdominal_circ')),
                ('spleen_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='spleen_size')),
                ('lymph_enlargment', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='lymph_enlargement')),
                ('cervical', models.PositiveIntegerField(blank=True, null=True, verbose_name='cervical')),
                ('epitro', models.PositiveIntegerField(blank=True, null=True, verbose_name='epitrochea')),
                ('inginual', models.PositiveIntegerField(blank=True, null=True, verbose_name='inginual')),
                ('injected', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='injected')),
                ('limbus', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='limbus')),
                ('bulbar', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True, verbose_name='bulbar')),
                ('transfusion', models.PositiveIntegerField(blank=True, null=True, verbose_name='transfusion')),
                ('crystalline', models.PositiveIntegerField(blank=True, null=True, verbose_name='crystalline')),
                ('form1', models.PositiveIntegerField(blank=True, null=True, verbose_name='form1')),
                ('form2', models.PositiveIntegerField(blank=True, null=True, verbose_name='form2')),
                ('form3', models.PositiveIntegerField(blank=True, null=True, verbose_name='form3')),
                ('form4', models.PositiveIntegerField(blank=True, null=True, verbose_name='form4')),
                ('form4x', models.PositiveIntegerField(blank=True, null=True, verbose_name='form4x')),
                ('dextran', models.PositiveIntegerField(blank=True, null=True, verbose_name='dextran')),
                ('haesteryl', models.PositiveIntegerField(blank=True, null=True, verbose_name='haesteryl')),
                ('hct', models.PositiveIntegerField(blank=True, null=True, verbose_name='hct')),
                ('pmn', models.PositiveIntegerField(blank=True, null=True, verbose_name='pmn')),
                ('band', models.PositiveIntegerField(blank=True, null=True, verbose_name='band')),
                ('lymp', models.PositiveIntegerField(blank=True, null=True, verbose_name='lymp')),
                ('atyp', models.PositiveIntegerField(blank=True, null=True, verbose_name='atyp')),
                ('mono', models.PositiveIntegerField(blank=True, null=True, verbose_name='mono')),
                ('baso', models.PositiveIntegerField(blank=True, null=True, verbose_name='baso')),
                ('eosin', models.PositiveIntegerField(blank=True, null=True, verbose_name='eosin')),
                ('lft_protein', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_protein')),
                ('lft_albumin', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_albumin')),
                ('lft_ast', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_ast')),
                ('lft_alt', models.PositiveIntegerField(blank=True, null=True, verbose_name='lft_alt')),
                ('eff_1', models.PositiveIntegerField(blank=True, null=True, verbose_name='eff_1')),
                ('eff_2', models.PositiveIntegerField(blank=True, null=True, verbose_name='eff_2')),
                ('eff_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='eff_amount')),
                ('weight_ht', models.PositiveIntegerField(blank=True, null=True, verbose_name='weight/ht')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height')),
                ('o2sat', models.PositiveIntegerField(blank=True, null=True, verbose_name='O2 Saturation')),
                ('hematocrit', models.PositiveIntegerField(blank=True, null=True)),
                ('platelet', models.PositiveIntegerField(blank=True, null=True)),
                ('wbc', models.PositiveIntegerField(blank=True, null=True)),
                ('warning_signs', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Warning Signs')),
                ('additional', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Additional Info')),
                ('medical_advice', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Medical Advice')),
                ('status', models.CharField(blank=True, choices=[('febrile', 'febrile'), ('critical', 'critical'), ('recovery', 'recovery')], max_length=20, null=True)),
                ('status_changed_to_critical', model_utils.fields.MonitorField(default=django.utils.timezone.now, editable=False, monitor='status', when={'critical'})),
                ('monitoring_interval', models.SmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['datetime'],
                'get_latest_by': 'datetime',
            },
        ),
    ]
